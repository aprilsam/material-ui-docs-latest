(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{"+Xn+":function(n,e,o){"use strict";o.r(e),o.d(e,"default",(function(){return l}));var t=o("mXGw"),a=o.n(t),s=o("e+1t"),r=o("kVtE"),i=a.a.createElement,p=o("nbyF");function l(n){var e=n.docs;return i(s.a,{docs:e})}l.getInitialProps=function(){var n=Object(r.a)({pageFilename:"api/tab-scroll-button",requireRaw:p});return{demos:n.demos,docs:n.docs}}},fo7s:function(n,e){n.exports='---\nfilename: /packages/material-ui/src/TabScrollButton/TabScrollButton.js\n---\n\n\x3c!--- This documentation is automatically generated, do not try to edit it. --\x3e\n\n# TabScrollButton API\n\n<p class="description">The API documentation of the TabScrollButton React component. Learn more about the props and the CSS customization points.</p>\n\n## Import\n\n```js\nimport TabScrollButton from \'@material-ui/core/TabScrollButton\';\n// or\nimport { TabScrollButton } from \'@material-ui/core\';\n```\n\nYou can learn more about the difference by [reading this guide](/guides/minimizing-bundle-size/).\n\n\n\n## Component name\n\nThe `MuiTabScrollButton` name can be used for providing [default props](/customization/globals/#default-props) or [style overrides](/customization/globals/#css) at the theme level.\n\n## Props\n\n| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|\n| <span class="prop-name">children</span> | <span class="prop-type">node</span> |  | The content of the component. |\n| <span class="prop-name">classes</span> | <span class="prop-type">object</span> |  | Override or extend the styles applied to the component. See [CSS API](#css) below for more details. |\n| <span class="prop-name required">direction&nbsp;*</span> | <span class="prop-type">\'left\'<br>&#124;&nbsp;\'right\'</span> |  | Which direction should the button indicate? |\n| <span class="prop-name">disabled</span> | <span class="prop-type">bool</span> |  | If `true`, the element will be disabled. |\n| <span class="prop-name required">orientation&nbsp;*</span> | <span class="prop-type">\'horizontal\'<br>&#124;&nbsp;\'vertical\'</span> |  | The tabs orientation (layout flow direction). |\n\nThe `ref` is forwarded to the root element.\n\nAny other props supplied will be provided to the root element (native element).\n\n## CSS\n\n| Rule name | Global class | Description |\n|:-----|:-------------|:------------|\n| <span class="prop-name">root</span> | <span class="prop-name">.MuiTabScrollButton-root</span> | Styles applied to the root element.\n| <span class="prop-name">vertical</span> | <span class="prop-name">.MuiTabScrollButton-vertical</span> | Styles applied to the root element if `orientation="vertical"`.\n| <span class="prop-name">disabled</span> | <span class="prop-name">.Mui-disabled</span> | Pseudo-class applied to the root element if `disabled={true}`.\n\nYou can override the style of the component thanks to one of these customization points:\n\n- With a rule name of the [`classes` object prop](/customization/components/#overriding-styles-with-classes).\n- With a [global class name](/customization/components/#overriding-styles-with-global-class-names).\n- With a theme and an [`overrides` property](/customization/globals/#css).\n\nIf that\'s not sufficient, you can check the [implementation of the component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/TabScrollButton/TabScrollButton.js) for more detail.\n\n## Demos\n\n- [Tabs](/components/tabs/)\n\n'},kp2z:function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-docs/tab-scroll-button",function(){return o("+Xn+")}])},nbyF:function(n,e,o){var t={"./tab-scroll-button.md":"fo7s"};function a(n){var e=s(n);return o(e)}function s(n){if(!o.o(t,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=s,n.exports=a,a.id="nbyF"}},[["kp2z",0,2,1,3,4,5,6,7,8,9,10,11,12,14,15,13,16,17,18]]]);